plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'project'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //JDBC
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    // Database
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // MiniO
    implementation 'io.minio:minio:8.4.2'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Spring Boot에서 기본적으로 사용되는 OAuth2 관련 의존성 (선택 사항)
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    // JWT 인증을 사용할 경우 (선택 사항)
    implementation 'com.auth0:java-jwt:4.4.0'
//    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
//    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
//    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // 유효성 검증
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Mongo DB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // Spring Batch 5
    implementation 'org.springframework.boot:spring-boot-starter-batch'

}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation"
}